<?php

/**
 * @file
 * Preprocess functions for the Taiwan Hub Subtheme.
 */

/**
 * Prepares variables for the html.html.twig template.
 */
function taiwan_hub_subtheme_preprocess_html(&$variables) {
  $variables['stanford_basic_path'] = \Drupal::service('extension.list.theme')->getPath('stanford_basic');
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function taiwan_hub_subtheme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (!empty($variables['elements']['#id']) && $variables['elements']['#id'] == 'taiwan_hub_subtheme_search') {
    $suggestions[] = 'block__stanford_basic_search';
  }
}

function taiwan_hub_subtheme_preprocess_page(&$variables) {
  $variables['add_curved_background'] = TRUE;

  if(
    isset($variables['node']) &&
    $variables['node'] instanceof \Drupal\node\NodeInterface &&
    $variables['node']->hasField('su_page_banner') &&
    $variables['node']->get('su_page_banner')->count()
  ) {
    $banner_id = $variables['node']->get('su_page_banner')->get(0)->get('target_id')->getString();
    $top_banner = \Drupal::entityTypeManager()->getStorage('paragraph')->load($banner_id);

    if($top_banner){
      $variables['add_curved_background'] = FALSE;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function taiwan_hub_subtheme_preprocess_ds_entity_view(&$variables) {
  // if not running on a paragraph, exit out.
  if (!isset($variables['content']['#paragraph'])) {
    return;
  }

  $paragraph = $variables['content']['#paragraph'];

  // Process Cards
  if ($paragraph->bundle() == 'stanford_card') {
    taiwan_hub_subtheme_preprocess_card($variables);
  }

  // Process Banners
  if ($paragraph->bundle() == 'stanford_banner') {
    taiwan_hub_subtheme_preprocess_banner($variables);
  }
}


/**
 * Implements hook_preprocess_card().
 */
function taiwan_hub_subtheme_preprocess_card(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add border style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_border_style', 'su-card-wrapper--border-regular');

  $card_info = [];

  // Add card type class to card wrapper. 3rd variable provides the default card type.
  $card_info['card_type'] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_type', 'su-card-wrapper--default');
  $variables['attributes']['class'][] = $card_info['card_type'];
}

/**
 * Implements hook_preprocess_banner().
 */
function taiwan_hub_subtheme_preprocess_banner(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add button color style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:banner_variant_info', 'banner_style', 'thub-wrapper--banner-default');
}